!function(t){var c={};function e(n){if(c[n])return c[n].exports;var g=c[n]={i:n,l:!1,exports:{}};return t[n].call(g.exports,g,g.exports,e),g.l=!0,g.exports}e.m=t,e.c=c,e.d=function(t,c,n){e.o(t,c)||Object.defineProperty(t,c,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,c){if(1&c&&(t=e(t)),8&c)return t;if(4&c&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&c&&"string"!=typeof t)for(var g in t)e.d(n,g,function(c){return t[c]}.bind(null,g));return n},e.n=function(t){var c=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(c,"a",c),c},e.o=function(t,c){return Object.prototype.hasOwnProperty.call(t,c)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/helpers.js\nfunction createElement(tag, props, ...children) {\r\n    const element = document.createElement(tag);\r\n\r\n    Object.keys(props).forEach(key => {\r\n        if(key.startsWith('data-')) {\r\n            element.setAttribute(key, props[key]);\r\n        }\r\n        else {\r\n            element[key] = props[key];\r\n        }\r\n    });\r\n\r\n    children.forEach(child => {\r\n        if(typeof child === 'string') {\r\n            child = document.createTextNode(child);\r\n        }\r\n        element.appendChild(child);\r\n    });\r\n\r\n    return element;\r\n}\r\n\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.events = {};\r\n    }\r\n\r\n    on(type, callback) { //подписка на событие - тип события и функция обработчик - складываем название событий и их функции вызова\r\n        this.events[type] = this.events[type] || [];\r\n        this.events[type].push(callback);\r\n    }\r\n\r\n    emit(type, arg) { //тип события, который необходимо запустить и доп данные - запускаем события с аргументами для функций вызовов\r\n        if(this.events[type]) { //если есть что вызывать\r\n            this.events[type].forEach(callback => callback(arg));\r\n        }\r\n    }\r\n}\r\n\r\nfunction save(data) {\r\n    const string = JSON.stringify(data);\r\n    localStorage.setItem('todos', string);\r\n}\r\n\r\nfunction load() {\r\n    const string = localStorage.getItem('todos');\r\n    const data = JSON.parse(string);\r\n    return data;\r\n}\r\n\r\n\n// CONCATENATED MODULE: ./src/model.js\n\r\n\r\nclass model_Model extends EventEmitter{\r\n\r\n    constructor(state = []) {\r\n        super();\r\n\r\n        //this.state = state;\r\n        this.state = [];\r\n    }\r\n\r\n    getItem(id) {\r\n        return this.state.find(item => item.id == id);\r\n    }\r\n\r\n    addItem(item) {\r\n        this.state.push(item);\r\n        this.emit('change', this.state);\r\n        return item;\r\n    }\r\n\r\n    updateItem(id, data) {\r\n        const item = this.getItem(id);\r\n        Object.keys(data).forEach(prop => item[prop] = data[prop]);\r\n        this.emit('change', this.state);\r\n        return item;\r\n    }\r\n\r\n    removeItem(id) {\r\n        const index = this.state.findIndex(item => item.id == id);\r\n\r\n        if(index > -1) {\r\n            this.state.splice(index, 1);\r\n            this.emit('change', this.state);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/* harmony default export */ var model = (model_Model);\n// CONCATENATED MODULE: ./src/view.js\n\r\n\r\nclass view_View extends EventEmitter{\r\n    constructor() {\r\n        super(); //потому что наследуемся от EventEmitter. В классе EventEmitter все this со свойствами и метоами инициализировадисб и this внутри EventEmiiter будут отнаситься к нему. а все последюущие this к текущему классу View.\r\n\r\n        this.desc = '#desc-';\r\n        this.form  = '.todo-form';\r\n        this.input = '.add-input';\r\n        this.list = '.todo-list';\r\n        this.createLink = document.getElementById('create-desc-link');\r\n        this.deskWrap = document.getElementById('desk-wrap');\r\n\r\n        this.createLink.addEventListener('click', this.handleAddDesc.bind(this));\r\n    }\r\n\r\n    createElement(todo) {\r\n        const checkbox = createElement('input', {type: 'checkbox', className: 'checkbox', 'data-hash': todo.hash, checked: todo.completed ? 'checked' : ''});\r\n        const label = createElement('label', {className: 'title'}, todo.title);\r\n        const editInput = createElement('input', {type: 'text', className: 'textfield'});\r\n        const editButton = createElement('button', {className: 'edit', 'data-hash': todo.hash}, 'Изменить');\r\n        const deleteButton = createElement('button', {className: 'remove'}, 'Удалить');\r\n        const item = createElement('li', {className: `todo-item${todo.completed ? ' completed' : ''}`, 'data-id': todo.id}, checkbox, label, editInput, editButton, deleteButton);\r\n\r\n        return item;\r\n        //return this.addEventListeners(item);\r\n    }\r\n\r\n    getUniqueID() {\r\n        const d = +new Date();\r\n        return `dqw${d}`;\r\n    }\r\n\r\n    createDesk(param) {\r\n        const id = this.getUniqueID();\r\n\r\n        const h1 = createElement('h1', {}, param.title);\r\n        const header = createElement('header', {className: `header ${param.color}`, 'data-hash': id}, h1);\r\n        const ul = createElement('ul', {className: 'todo-list'});\r\n        const input = createElement('input', {className: 'add-input', type: 'text'});\r\n        const button = createElement('button', {className: 'add-button', type: 'submit', 'data-hash': id}, 'Добавить');\r\n        const form = createElement('form', {className: 'todo-form'}, input, button);\r\n        const desc = createElement('div', {className: 'desc', id: `desc-${id}`}, header, ul, form);\r\n\r\n        return {\r\n            desc, id\r\n        };\r\n    }\r\n    addDesc(param) {\r\n        const descItem = this.createDesk(param);\r\n        this.deskWrap.appendChild(descItem.desc);\r\n        this.addEventHandler(descItem.id,'click', this.handleAdd);\r\n    }\r\n\r\n    addEventHandler(hash, ev, callback) {\r\n        document.querySelector(`button[data-hash=${hash}]`).addEventListener(ev, callback.bind(this));\r\n    }\r\n\r\n    addEventListeners(listItem) {\r\n        const checkbox = listItem.querySelector('.checkbox');\r\n        const editButton = listItem.querySelector('button.edit');\r\n        const removeButton = listItem.querySelector('button.remove');\r\n\r\n        checkbox.addEventListener('change', this.handleToggle.bind(this));\r\n        editButton.addEventListener('click', this.handleEdit.bind(this));\r\n        removeButton.addEventListener('click', this.handleRemove.bind(this));\r\n\r\n        return listItem;\r\n    }\r\n\r\n    handleAddDesc(event) {\r\n        event.preventDefault();\r\n        this.emit('create-desc', {title: 'Новая карточка', color: '#2399D5'});\r\n    }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n        const hash = event.target.getAttribute('data-hash');\r\n        const input_val = document.querySelector(`${this.desc+hash} ${this.input}`).value;\r\n        if(!input_val) return alert('Введите название задачи');\r\n        this.emit('add', {hash, title: input_val});\r\n    }\r\n\r\n    handleToggle({target}) {\r\n        const listItem = target.parentNode;\r\n        const id = listItem.getAttribute('data-id');\r\n        const completed = target.checked;\r\n\r\n        this.emit('toggle', {id, completed});\r\n    }\r\n\r\n    handleEdit({target}) {\r\n        const listItem = target.parentNode;\r\n        const id = listItem.getAttribute('data-id');\r\n        const label = listItem.querySelector('.title');\r\n        const input = listItem.querySelector('.textfield');\r\n        const editButton = listItem.querySelector('button.edit');\r\n        const title = input.value;\r\n        const isEditing = listItem.classList.contains('editing');\r\n        if(isEditing) {\r\n            this.emit('edit', {id, title});\r\n        }\r\n        else {\r\n            input.value = label.textContent;\r\n            editButton.textContent = 'Сохранить';\r\n            listItem.classList.add('editing');\r\n        }\r\n    }\r\n\r\n    handleRemove({target}) {\r\n        const listItem = target.parentNode;\r\n        const id = listItem.getAttribute('data-id');\r\n\r\n        this.emit('remove', id);\r\n    }\r\n\r\n    addItem(todo) {\r\n        const listItem = this.createElement(todo);\r\n        document.querySelector(`${this.desc+todo.hash} ${this.input}`).value = '';\r\n        alert(document.querySelector(`${this.desc+todo.hash} ${this.list}`));\r\n        document.querySelector(`${this.desc+todo.hash} ${this.list}`).appendChild(listItem);\r\n    }\r\n\r\n    findListItem(id) {\r\n        return this.list.querySelector(`[data-id=\"${id}\"]`);\r\n    }\r\n\r\n    toggleItem(todo) {\r\n        const listItem = this.findListItem(todo.id);\r\n        const checkbox = listItem.querySelector('.checkbox');\r\n\r\n        checkbox.checked = todo.completed;\r\n\r\n        if(todo.completed) listItem.classList.add('completed');\r\n        else listItem.classList.remove('completed');\r\n    }\r\n\r\n    editItem(todo) {\r\n        const listItem = this.findListItem(todo.id);\r\n        const label = listItem.querySelector('.title');\r\n        const input = listItem.querySelector('.textfield');\r\n        const editButton = listItem.querySelector('button.edit');\r\n\r\n        label.textContent = todo.title;\r\n        editButton.textContent = 'Изменить';\r\n        listItem.classList.remove('editing');\r\n    }\r\n\r\n    removeItem(id) {\r\n        const listItem = this.findListItem(id);\r\n        this.list.removeChild(listItem);\r\n    }\r\n\r\n    show(todos) {\r\n        // todos.forEach(todo => {\r\n        //     const listItem = this.createElement(todo);\r\n        //\r\n        //     this.list.appendChild(listItem);\r\n        // });\r\n    }\r\n}\r\n\r\n/* harmony default export */ var view = (view_View);\n// CONCATENATED MODULE: ./src/controller.js\nclass Controller {\r\n    constructor(model, view) {\r\n        this.model = model;\r\n        this.view = view;\r\n\r\n        view.on('create-desc', this.createDesk.bind(this));\r\n\r\n        // view.on('toggle', this.toggleTodo.bind(this));\r\n        // view.on('edit', this.editTodo.bind(this));\r\n        // view.on('remove', this.removeTodo.bind(this));\r\n\r\n        view.show(model.state);\r\n    }\r\n\r\n    createDesk(param) { // {title, color}\r\n        this.view.addDesc(param);\r\n        this.view.on('add', this.addTodo.bind(this));\r\n    }\r\n\r\n    addTodo(param) { // {hash, title}\r\n        // const todo = this.model.addItem({\r\n        //     id: Date.now(),\r\n        //     title,\r\n        //     completed: false\r\n        // });\r\n        param.completed = false;\r\n        this.view.addItem(param);\r\n    }\r\n\r\n    toggleTodo({id, completed}) {\r\n        const todo = this.model.updateItem(id, {completed});\r\n        this.view.toggleItem(todo);\r\n    }\r\n\r\n    editTodo({id, title}) {\r\n        const todo = this.model.updateItem(id, {title});\r\n\r\n        this.view.editItem(todo);\r\n    }\r\n\r\n    removeTodo(id) {\r\n        this.model.removeItem(id); //удаляем из модели\r\n        this.view.removeItem(id); //теперь удаляем из представления\r\n    }\r\n}\r\n\r\n/* harmony default export */ var controller = (Controller);\n// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\nconst src_state = load();\r\n\r\nconst src_model = new model(src_state || undefined);\r\nsrc_model.on('change', state => save(state));\r\n\r\nconst src_view = new view();\r\nconst src_controller = new controller(src_model, src_view);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);